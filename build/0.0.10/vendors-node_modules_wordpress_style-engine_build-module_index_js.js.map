{"version":3,"file":"vendors-node_modules_wordpress_style-engine_build-module_index_js.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAC4C;AAC5C;AACA;AACA;;AAE4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP,6CAA6C;;AAE7C;AACA;AACA;AACA,0BAA0B,iDAAS,WAAW,IAAI,YAAY;AAC9D,KAAK;AACL;AACA;;AAEA,uBAAuB,+CAAO;AAC9B;AACA,gBAAgB,eAAe,EAAE,yCAAyC,iDAAS,WAAW,IAAI,YAAY,eAAe;AAC7H;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA,EAAE,6DAAwB;AAC1B;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;;ACtDA;AACA;AACA;AACsE;AACtE;AACA;AACA;AACA;AACA;AACA,WAAW,oDAAY;AACvB;AACA;AACA;AACA;AACA;AACA,WAAW,wDAAgB;AAC3B;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oDAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oDAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,+BAA+B,kDAAU,qBAAqB,EAAE,kDAAU,MAAM;AAChF;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAAe,oGAAoG,EAAC;AACpH;;;;;;;;;;;;ACpFA;AACA;AACA;AACwC;AACxC;AACA;AACA;AACA,WAAW,oDAAY;AACvB;AACA;AACA,+DAAe,UAAU,EAAC;AAC1B;;;;;;;;;;;;ACXA;AACA;AACA;AACwC;AACxC;AACA;AACA;AACA,WAAW,oDAAY;AACvB;AACA;AACA,+DAAe,QAAQ,EAAC;AACxB;;;;;;;;;;;;;;ACXA;AACA;AACA;AACsC;AACJ;AACR;AAC1B,+DAAe,CAAC,6CAAI,EAAE,iDAAQ,EAAE,mDAAU,CAAC,EAAC;AAC5C;;;;;;;;;;;;ACPA;AACA;AACA;AACwC;AACxC;AACA;AACA;AACA,WAAW,oDAAY;AACvB;AACA;AACA,+DAAe,IAAI,EAAC;AACpB;;;;;;;;;;;;;;;;ACXO;AACA;AACA;AACP;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AAC8B;AACF;AACI;AACM;AAC/B,6BAA6B,+CAAM,KAAK,8CAAK,KAAK,gDAAO,KAAK,mDAAU;AAC/E;;;;;;;;;;;;;ACRA;AACA;AACA;AACgC;AACF;AAC9B,+DAAe,CAAC,+CAAM,EAAE,gDAAO,CAAC,EAAC;AACjC;;;;;;;;;;;;ACNA;AACA;AACA;AAC4C;AAC5C;AACA;AACA;AACA,WAAW,wDAAgB;AAC3B;AACA;AACA,KAAK;AACL;AACA;AACA,+DAAe,MAAM,EAAC;AACtB;;;;;;;;;;;;ACdA;AACA;AACA;AAC4C;AAC5C;AACA;AACA;AACA,WAAW,wDAAgB;AAC3B;AACA;AACA,KAAK;AACL;AACA;AACA,+DAAe,OAAO,EAAC;AACvB;;;;;;;;;;;;ACdA;AACA;AACA;AACwC;AACxC;AACA;AACA;AACA,WAAW,oDAAY;AACvB;AACA;AACA;AACA;AACA;AACA,WAAW,oDAAY;AACvB;AACA;AACA;AACA;AACA;AACA,WAAW,oDAAY;AACvB;AACA;AACA;AACA;AACA;AACA,WAAW,oDAAY;AACvB;AACA;AACA;AACA;AACA;AACA,WAAW,oDAAY;AACvB;AACA;AACA;AACA;AACA;AACA,WAAW,oDAAY;AACvB;AACA;AACA;AACA;AACA;AACA,WAAW,oDAAY;AACvB;AACA;AACA,+DAAe,2FAA2F,EAAC;AAC3G;;;;;;;;;;;;;;;;;;;;AC/CA;AACA;AACA;AAC6B;AAC7B;AACA;AACA;;AAEsI;AACtI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP,qBAAqB,2CAAG;AACxB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA,mBAAmB,2CAAG;;AAEtB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA,oBAAoB,2CAAG;;AAEvB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP,8DAA8D,iEAAyB;AACvF,sCAAsC,wEAAgC,QAAQ,+EAAuC,OAAO,2EAAmC;AAC/J,wBAAwB,SAAS;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA","sources":["webpack://newfold.Onboarding/./node_modules/@wordpress/style-engine/build-module/index.js","webpack://newfold.Onboarding/./node_modules/@wordpress/style-engine/build-module/styles/border/index.js","webpack://newfold.Onboarding/./node_modules/@wordpress/style-engine/build-module/styles/color/background.js","webpack://newfold.Onboarding/./node_modules/@wordpress/style-engine/build-module/styles/color/gradient.js","webpack://newfold.Onboarding/./node_modules/@wordpress/style-engine/build-module/styles/color/index.js","webpack://newfold.Onboarding/./node_modules/@wordpress/style-engine/build-module/styles/color/text.js","webpack://newfold.Onboarding/./node_modules/@wordpress/style-engine/build-module/styles/constants.js","webpack://newfold.Onboarding/./node_modules/@wordpress/style-engine/build-module/styles/index.js","webpack://newfold.Onboarding/./node_modules/@wordpress/style-engine/build-module/styles/spacing/index.js","webpack://newfold.Onboarding/./node_modules/@wordpress/style-engine/build-module/styles/spacing/margin.js","webpack://newfold.Onboarding/./node_modules/@wordpress/style-engine/build-module/styles/spacing/padding.js","webpack://newfold.Onboarding/./node_modules/@wordpress/style-engine/build-module/styles/typography/index.js","webpack://newfold.Onboarding/./node_modules/@wordpress/style-engine/build-module/styles/utils.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport { groupBy, kebabCase } from 'lodash';\n/**\n * Internal dependencies\n */\n\nimport { styleDefinitions } from './styles';\n/**\n * Generates a stylesheet for a given style object and selector.\n *\n * @param  style   Style object.\n * @param  options Options object with settings to adjust how the styles are generated.\n *\n * @return generated stylesheet.\n */\n\nexport function generate(style, options) {\n  const rules = getCSSRules(style, options); // If no selector is provided, treat generated rules as inline styles to be returned as a single string.\n\n  if (!(options !== null && options !== void 0 && options.selector)) {\n    const inlineRules = [];\n    rules.forEach(rule => {\n      inlineRules.push(`${kebabCase(rule.key)}: ${rule.value};`);\n    });\n    return inlineRules.join(' ');\n  }\n\n  const groupedRules = groupBy(rules, 'selector');\n  const selectorRules = Object.keys(groupedRules).reduce((acc, subSelector) => {\n    acc.push(`${subSelector} { ${groupedRules[subSelector].map(rule => `${kebabCase(rule.key)}: ${rule.value};`).join(' ')} }`);\n    return acc;\n  }, []);\n  return selectorRules.join('\\n');\n}\n/**\n * Returns a JSON representation of the generated CSS rules.\n *\n * @param  style   Style object.\n * @param  options Options object with settings to adjust how the styles are generated.\n *\n * @return generated styles.\n */\n\nexport function getCSSRules(style, options) {\n  const rules = [];\n  styleDefinitions.forEach(definition => {\n    if (typeof definition.generate === 'function') {\n      rules.push(...definition.generate(style, options));\n    }\n  });\n  return rules;\n}\n//# sourceMappingURL=index.js.map","/**\n * Internal dependencies\n */\nimport { generateRule, generateBoxRules, upperFirst } from '../utils';\nconst color = {\n  name: 'color',\n  generate: function (style, options) {\n    let path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ['border', 'color'];\n    let ruleKey = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'borderColor';\n    return generateRule(style, options, path, ruleKey);\n  }\n};\nconst radius = {\n  name: 'radius',\n  generate: (style, options) => {\n    return generateBoxRules(style, options, ['border', 'radius'], {\n      default: 'borderRadius',\n      individual: 'border%sRadius'\n    }, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n  }\n};\nconst borderStyle = {\n  name: 'style',\n  generate: function (style, options) {\n    let path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ['border', 'style'];\n    let ruleKey = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'borderStyle';\n    return generateRule(style, options, path, ruleKey);\n  }\n};\nconst width = {\n  name: 'width',\n  generate: function (style, options) {\n    let path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ['border', 'width'];\n    let ruleKey = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'borderWidth';\n    return generateRule(style, options, path, ruleKey);\n  }\n};\nconst borderDefinitionsWithIndividualStyles = [color, borderStyle, width];\n/**\n * Returns a curried generator function with the individual border property ('top' | 'right' | 'bottom' | 'left') baked in.\n *\n * @param  individualProperty Individual border property ('top' | 'right' | 'bottom' | 'left').\n *\n * @return StyleDefinition[ 'generate' ]\n */\n\nconst createBorderGenerateFunction = individualProperty => (style, options) => {\n  var _style$border;\n\n  const styleValue = style === null || style === void 0 ? void 0 : (_style$border = style.border) === null || _style$border === void 0 ? void 0 : _style$border[individualProperty];\n\n  if (!styleValue) {\n    return [];\n  }\n\n  return borderDefinitionsWithIndividualStyles.reduce((acc, borderDefinition) => {\n    const key = borderDefinition.name;\n\n    if (styleValue.hasOwnProperty(key) && typeof borderDefinition.generate === 'function') {\n      const ruleKey = `border${upperFirst(individualProperty)}${upperFirst(key)}`;\n      acc.push(...borderDefinition.generate(style, options, ['border', individualProperty, key], ruleKey));\n    }\n\n    return acc;\n  }, []);\n};\n\nconst borderTop = {\n  name: 'borderTop',\n  generate: createBorderGenerateFunction('top')\n};\nconst borderRight = {\n  name: 'borderRight',\n  generate: createBorderGenerateFunction('right')\n};\nconst borderBottom = {\n  name: 'borderBottom',\n  generate: createBorderGenerateFunction('bottom')\n};\nconst borderLeft = {\n  name: 'borderLeft',\n  generate: createBorderGenerateFunction('left')\n};\nexport default [...borderDefinitionsWithIndividualStyles, radius, borderTop, borderRight, borderBottom, borderLeft];\n//# sourceMappingURL=index.js.map","/**\n * Internal dependencies\n */\nimport { generateRule } from '../utils';\nconst background = {\n  name: 'background',\n  generate: (style, options) => {\n    return generateRule(style, options, ['color', 'background'], 'backgroundColor');\n  }\n};\nexport default background;\n//# sourceMappingURL=background.js.map","/**\n * Internal dependencies\n */\nimport { generateRule } from '../utils';\nconst gradient = {\n  name: 'gradient',\n  generate: (style, options) => {\n    return generateRule(style, options, ['color', 'gradient'], 'background');\n  }\n};\nexport default gradient;\n//# sourceMappingURL=gradient.js.map","/**\n * Internal dependencies\n */\nimport background from './background';\nimport gradient from './gradient';\nimport text from './text';\nexport default [text, gradient, background];\n//# sourceMappingURL=index.js.map","/**\n * Internal dependencies\n */\nimport { generateRule } from '../utils';\nconst text = {\n  name: 'text',\n  generate: (style, options) => {\n    return generateRule(style, options, ['color', 'text'], 'color');\n  }\n};\nexport default text;\n//# sourceMappingURL=text.js.map","export const VARIABLE_REFERENCE_PREFIX = 'var:';\nexport const VARIABLE_PATH_SEPARATOR_TOKEN_ATTRIBUTE = '|';\nexport const VARIABLE_PATH_SEPARATOR_TOKEN_STYLE = '--';\n//# sourceMappingURL=constants.js.map","/**\n * Internal dependencies\n */\nimport border from './border';\nimport color from './color';\nimport spacing from './spacing';\nimport typography from './typography';\nexport const styleDefinitions = [...border, ...color, ...spacing, ...typography];\n//# sourceMappingURL=index.js.map","/**\n * Internal dependencies\n */\nimport padding from './padding';\nimport margin from './margin';\nexport default [margin, padding];\n//# sourceMappingURL=index.js.map","/**\n * Internal dependencies\n */\nimport { generateBoxRules } from '../utils';\nconst margin = {\n  name: 'margin',\n  generate: (style, options) => {\n    return generateBoxRules(style, options, ['spacing', 'margin'], {\n      default: 'margin',\n      individual: 'margin%s'\n    });\n  }\n};\nexport default margin;\n//# sourceMappingURL=margin.js.map","/**\n * Internal dependencies\n */\nimport { generateBoxRules } from '../utils';\nconst padding = {\n  name: 'padding',\n  generate: (style, options) => {\n    return generateBoxRules(style, options, ['spacing', 'padding'], {\n      default: 'padding',\n      individual: 'padding%s'\n    });\n  }\n};\nexport default padding;\n//# sourceMappingURL=padding.js.map","/**\n * Internal dependencies\n */\nimport { generateRule } from '../utils';\nconst fontSize = {\n  name: 'fontSize',\n  generate: (style, options) => {\n    return generateRule(style, options, ['typography', 'fontSize'], 'fontSize');\n  }\n};\nconst fontStyle = {\n  name: 'fontStyle',\n  generate: (style, options) => {\n    return generateRule(style, options, ['typography', 'fontStyle'], 'fontStyle');\n  }\n};\nconst fontWeight = {\n  name: 'fontWeight',\n  generate: (style, options) => {\n    return generateRule(style, options, ['typography', 'fontWeight'], 'fontWeight');\n  }\n};\nconst letterSpacing = {\n  name: 'letterSpacing',\n  generate: (style, options) => {\n    return generateRule(style, options, ['typography', 'letterSpacing'], 'letterSpacing');\n  }\n};\nconst lineHeight = {\n  name: 'letterSpacing',\n  generate: (style, options) => {\n    return generateRule(style, options, ['typography', 'lineHeight'], 'lineHeight');\n  }\n};\nconst textDecoration = {\n  name: 'textDecoration',\n  generate: (style, options) => {\n    return generateRule(style, options, ['typography', 'textDecoration'], 'textDecoration');\n  }\n};\nconst textTransform = {\n  name: 'textTransform',\n  generate: (style, options) => {\n    return generateRule(style, options, ['typography', 'textTransform'], 'textTransform');\n  }\n};\nexport default [fontSize, fontStyle, fontWeight, letterSpacing, lineHeight, textDecoration, textTransform];\n//# sourceMappingURL=index.js.map","/**\n * External dependencies\n */\nimport { get } from 'lodash';\n/**\n * Internal dependencies\n */\n\nimport { VARIABLE_REFERENCE_PREFIX, VARIABLE_PATH_SEPARATOR_TOKEN_ATTRIBUTE, VARIABLE_PATH_SEPARATOR_TOKEN_STYLE } from './constants';\n/**\n * Returns a JSON representation of the generated CSS rules.\n *\n * @param  style   Style object.\n * @param  options Options object with settings to adjust how the styles are generated.\n * @param  path    An array of strings representing the path to the style value in the style object.\n * @param  ruleKey A CSS property key.\n *\n * @return GeneratedCSSRule[] CSS rules.\n */\n\nexport function generateRule(style, options, path, ruleKey) {\n  const styleValue = get(style, path);\n  return styleValue ? [{\n    selector: options === null || options === void 0 ? void 0 : options.selector,\n    key: ruleKey,\n    value: getCSSVarFromStyleValue(styleValue)\n  }] : [];\n}\n/**\n * Returns a JSON representation of the generated CSS rules taking into account box model properties, top, right, bottom, left.\n *\n * @param style                Style object.\n * @param options              Options object with settings to adjust how the styles are generated.\n * @param path                 An array of strings representing the path to the style value in the style object.\n * @param ruleKeys             An array of CSS property keys and patterns.\n * @param individualProperties The \"sides\" or individual properties for which to generate rules.\n *\n * @return GeneratedCSSRule[]  CSS rules.\n */\n\nexport function generateBoxRules(style, options, path, ruleKeys) {\n  let individualProperties = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : ['top', 'right', 'bottom', 'left'];\n  const boxStyle = get(style, path);\n\n  if (!boxStyle) {\n    return [];\n  }\n\n  const rules = [];\n\n  if (typeof boxStyle === 'string') {\n    rules.push({\n      selector: options === null || options === void 0 ? void 0 : options.selector,\n      key: ruleKeys.default,\n      value: boxStyle\n    });\n  } else {\n    const sideRules = individualProperties.reduce((acc, side) => {\n      const value = get(boxStyle, [side]);\n\n      if (value) {\n        acc.push({\n          selector: options === null || options === void 0 ? void 0 : options.selector,\n          key: ruleKeys === null || ruleKeys === void 0 ? void 0 : ruleKeys.individual.replace('%s', upperFirst(side)),\n          value\n        });\n      }\n\n      return acc;\n    }, []);\n    rules.push(...sideRules);\n  }\n\n  return rules;\n}\n/**\n * Returns a CSS var value from incoming style value following the pattern `var:description|context|slug`.\n *\n * @param  styleValue A raw style value.\n *\n * @return string A CSS var value.\n */\n\nexport function getCSSVarFromStyleValue(styleValue) {\n  if (typeof styleValue === 'string' && styleValue.startsWith(VARIABLE_REFERENCE_PREFIX)) {\n    const variable = styleValue.slice(VARIABLE_REFERENCE_PREFIX.length).split(VARIABLE_PATH_SEPARATOR_TOKEN_ATTRIBUTE).join(VARIABLE_PATH_SEPARATOR_TOKEN_STYLE);\n    return `var(--wp--${variable})`;\n  }\n\n  return styleValue;\n}\n/**\n * Capitalizes the first letter in a string.\n *\n * @param {string} str The string whose first letter the function will capitalize.\n *\n * @return string A CSS var value.\n */\n\nexport function upperFirst(_ref) {\n  let [firstLetter, ...rest] = _ref;\n  return firstLetter.toUpperCase() + rest.join('');\n}\n//# sourceMappingURL=utils.js.map"],"names":[],"sourceRoot":""}